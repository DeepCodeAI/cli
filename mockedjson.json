{"files": {"/deepcode/src/tests/test_dc_analysis.py": {"0": [{"rows": [150, 150], "cols": [36, 45]}, {"rows": [158, 158], "cols": [36, 45]}]}, "/deepcode/src/util.py": {"1": [{"rows": [47, 47], "cols": [10, 27]}], "8": [{"rows": [49, 49], "cols": [24, 26]}]}, "/deepcode/src/dc_analysis.py": {"2": [{"rows": [47, 47], "cols": [17, 20]}], "3": [{"rows": [315, 315], "cols": [9, 12]}, {"rows": [421, 421], "cols": [9, 12]}], "6": [{"rows": [188, 188], "cols": [37, 39]}], "7": [{"rows": [188, 188], "cols": [17, 22]}]}, "/deepcode/src/main.py": {"3": [{"rows": [36, 36], "cols": [5, 8]}]}, "/deepcode/src/modules/deepcode_lib.py": {"4": [{"rows": [44, 44], "cols": [28, 28]}]}, "/deepcode/src/api.py": {"5": [{"rows": [135, 135], "cols": [22, 26]}, {"rows": [269, 269], "cols": [18, 22]}], "8": [{"rows": [150, 150], "cols": [33, 35]}, {"rows": [178, 178], "cols": [34, 36]}, {"rows": [217, 217], "cols": [21, 23]}]}, "/deepcode/src/modules/analyzer.py": {"5": [{"rows": [61, 61], "cols": [18, 22]}, {"rows": [90, 90], "cols": [22, 26]}]}, "/deepcode/src/modules/user.py": {"5": [{"rows": [26, 26], "cols": [18, 22]}]}, "/deepcode/src/utils/analysis_utils.py": {"8": [{"rows": [88, 88], "cols": [24, 26]}]}}, "suggestions": {"0": {"id": "python%2Fdc%2Fadd~decode~json.loads", "message": "Add decode for handling unicode characters", "severity": 2}, "1": {"id": "python%2Fdc%2Fadd~shutdown~concurrent.futures.ThreadPoolExecutor", "message": "Missing call of shutdown for concurrent.futures.ThreadPoolExecutor. All current calls are submit.", "severity": 3}, "2": {"id": "python%2Fdc%2Fmissing~close~open", "message": "Missing close for open, add close or use a \"with\" block.", "severity": 2}, "3": {"id": "python%2Fdc%2Freplace~exit~sys.exit", "message": "Replace exit with sys.exit", "severity": 1}, "4": {"id": "python%2Fdc%2Freplace~keys~list~compare", "message": "Replace keys with list.", "severity": 1}, "5": {"id": "python%2Fdc%2Freplace~range~list", "message": "Wrap range in list for Python3 compatibility.", "severity": 1}, "6": {"id": "python%2Fdc%2FuseCompInstead", "message": "Use comprehensions instead of map/filter", "severity": 1}, "7": {"id": "python%2Fdc%2FuseCompInsteadOfListFilter", "message": "Use comprehensions instead of list(filter)", "severity": 2}, "8": {"id": "python%2Fdc%2FuseCompInsteadOfListMap", "message": "Use comprehensions instead of list(map)", "severity": 2}}}